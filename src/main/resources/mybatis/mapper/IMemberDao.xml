<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.member.dao.IMemberDao">

    <select id="getTotalRowCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM member
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchWord)">
            <if test='search.searchType == "NM"'> AND mem_name LIKE '%' || #{search.searchWord} || '%' </if>
            <if test='search.searchType == "ID"'> AND mem_id LIKE '%' || #{search.searchWord} || '%' </if>
            <if test='search.searchType == "HP"'> AND mem_hp LIKE '%' || #{search.searchWord} || '%' </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchJob)"> AND mem_job =
            #{search.searchJob}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchHobby)"> AND mem_hobby =
            #{search.searchHobby}
        </if>
    </select>

    <select id="getMemberList" resultType="com.study.member.vo.MemberVO">
        select *
        from (select a.*, rownum AS rnum
        from (SELECT mem_id,
        mem_pass,
        mem_name,
        to_char(mem_bir, 'YYYY-MM-DD') AS mem_bir,
        mem_zip,
        mem_add1,
        mem_add2,
        mem_hp,
        mem_mail,
        mem_job,
        mem_hobby,
        mem_mileage,
        mem_del_yn,
        b.comm_nm AS mem_job_nm
        FROM member a, comm_code b
        WHERE a.mem_job = b.comm_cd
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchWord)">
            <if test='search.searchType == "NM"'> AND mem_name LIKE '%' || #{search.searchWord} || '%' </if>
            <if test='search.searchType == "ID"'> AND mem_id LIKE '%' || #{search.searchWord} || '%' </if>
            <if test='search.searchType == "HP"'> AND mem_hp LIKE '%' || #{search.searchWord} || '%' </if>
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchJob)"> AND mem_job =
            #{search.searchJob}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(search.searchHobby)"> AND mem_hobby =
            #{search.searchHobby}
        </if>
        ORDER BY mem_id desc) a) b
        WHERE rnum between #{paging.firstRow} and #{paging.lastRow}
    </select>

    <select id="getMember" resultType="com.study.member.vo.MemberVO" parameterType="String">
        SELECT mem_id,
               mem_pass,
               mem_name,
               to_char(mem_bir, 'YYYY-MM-DD') AS mem_bir,
               mem_zip,
               mem_add1,
               mem_add2,
               mem_hp,
               mem_mail,
               mem_job,
               mem_hobby,
               mem_mileage,
               mem_del_yn,
               b.comm_nm                      as mem_job_nm,
               c.comm_nm                      as mem_hobby_nm
        FROM member a,
             comm_code b,
             comm_code c
        WHERE 1 = 1
          AND mem_id = #{memId}
          AND a.mem_job = b.comm_cd
          AND a.mem_hobby = c.comm_cd
    </select>

    <update id="updateMember" parameterType="com.study.member.vo.MemberVO">
        UPDATE member
        SET mem_pass  = #{memPass},
            mem_name  = #{memName},
            mem_bir   = #{memBir},
            mem_zip   = #{memZip},
            mem_add1  = #{memAdd1},
            mem_add2  = #{memAdd2},
            mem_hp    = #{memHp},
            mem_mail  = #{memMail},
            mem_job   = #{memJob},
            mem_hobby = #{memHobby}
        WHERE 1 = 1
          AND mem_id = #{memId}
    </update>

    <delete id="deleteMember" parameterType="com.study.member.vo.MemberVO">
        UPDATE member
        SET mem_del_yn = 'Y'
        WHERE 1 = 1
          AND mem_id = #{memId}
    </delete>

    <insert id="insertMember" parameterType="com.study.member.vo.MemberVO">
        INSERT INTO member (mem_id, mem_pass, mem_name,
                            mem_bir, mem_zip, mem_add1,
                            mem_add2, mem_hp, mem_mail,
                            mem_job, mem_hobby, mem_mileage,
                            mem_del_yn)
        VALUES (#{memId}, #{memPass}, #{memName},
                #{memBir}, #{memZip}, #{memAdd1},
                #{memAdd2}, #{memHp}, #{memMail},
                #{memJob}, #{memHobby}, 0,
                'N')
    </insert>

</mapper>